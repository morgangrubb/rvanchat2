#candy

- content_for :stylesheets do
  %link( rel="stylesheet" type="text/css" href="/candy/res/default.css" )

  / %link( rel="stylesheet" type="text/css" href="/plugins/stickysubject/candy.css" )
  / %link( rel="stylesheet" type="text/css" href="/plugins/roomPanel/default.css" )
  %link( rel="stylesheet" type="text/css" href="/plugins/replies/candy.css" )
  %link( rel="stylesheet" type="text/css" href="/plugins/notifyme/candy.css" )
  %link( rel="stylesheet" type="text/css" href="/plugins/namecomplete/candy.css" )
  %link( rel="stylesheet" type="text/css" href="/plugins/mucroombar/mucroombar.css" )
  %link( rel="stylesheet" type="text/css" href="/plugins/inline-images/candy.css" )

  = stylesheet_link_tag "candy/textarea.css"
  = stylesheet_link_tag "candy/nickchange.css"

  = stylesheet_link_tag :candy

- content_for :javascript do
  %script( type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" )
  %script( type="text/javascript" src="/candy/libs/libs.min.js" )
  %script( type="text/javascript" src="/candy/candy.min.js" )

  / %script( type="text/javascript" src="/plugins/stickysubject/candy.js" )
  %script( type="text/javascript" src="/plugins/slash-commands/slash-commands.js" )
  / %script( type="text/javascript" src="/plugins/roomPanel/roomPanel.js" )
  %script( type="text/javascript" src="/plugins/replies/candy.js" )
  %script( type="text/javascript" src="/plugins/refocus/candy.js" )
  %script( type="text/javascript" src="/plugins/nickchange/candy.js" )
  %script( type="text/javascript" src="/plugins/notifyme/candy.js" )
  %script( type="text/javascript" src="/plugins/notifications/candy.js" )
  %script( type="text/javascript" src="/plugins/namecomplete/candy.js" )
  %script( type="text/javascript" src="/plugins/mucroombar/mucroombar.js" )
  / %script( type="text/javascript" src="/plugins/me-does/candy.js" )
  %script( type="text/javascript" src="/plugins/join/candy.js" )
  %script( type="text/javascript" src="/plugins/inline-videos/candy.js" )
  %script( type="text/javascript" src="/plugins/inline-images/candy.js" )
  / %script( type="text/javascript" src="/plugins/emphasis/candy.js" )
  / %script( type="text/javascript" src="/plugins/chatrecall/candy.js" )
  %script( type="text/javascript" src="/plugins/bookmark/bookmark.js" )

  = javascript_include_tag "candy/textarea.js"

  :javascript
    $(document).ready(function() {
      Candy.init('http://#{XMPP_HOST}/http-bind/', {
        core: {
          // only set this to true if developing / debugging errors
          debug: false,
          // autojoin is a *required* parameter if you don't have a plugin (e.g. roomPanel) for it
          //   true
          //     -> fetch info from server (NOTE: does only work with openfire server)
          //   ['test@conference.example.com']
          //     -> array of rooms to join after connecting
          autojoin: #{candy_autojoin_rooms}
        },
        view: { assets: '/candy/res/' }
      });

      // Plugins!
      // CandyShop.StickySubject.init();
      CandyShop.SlashCommands.defaultConferenceDomain = '#{CONFERENCE_HOST}';
      CandyShop.SlashCommands.init();

      // Get rid of roompanel?
      // CandyShop.RoomPanel.init({
      //   mucDomain: '#{CONFERENCE_HOST}',
      //   roomList: #{candy_room_panel_user_rooms},
      //   showIfAllTabClosed: true,
      //   showTab: false,
      //   showToolbarIcon: false,
      //   autoDetectRooms: false,
      //   roomCacheTime: 600
      // });

      CandyShop.Replies.init();
      CandyShop.Refocus.init();
      // CandyShop.NotifyMe.init(); // Complains at getNick
      CandyShop.Nickchange.init();
      CandyShop.Notifications.init();
      CandyShop.NameComplete.init();
      CandyShop.RoomBar.init();
      // See https://groups.google.com/d/msg/candy-chat/G_URFxlpHfw/qPM5c8UYJZ0J
      // CandyShop.MeDoes.init();
      CandyShop.Join.init();
      CandyShop.InlineVideos.init(); // Make the videos appear larger
      CandyShop.InlineImages.init({ maxImageSize: 250, spinner: '/plugins/inline-images/spinner.gif' });
      // CandyShop.Emphasis.init(); // Doesn't do what you think it does.
      // CandyShop.ChatRecall.init();
      CandyShop.Bookmark.init();
      CandyShop.Textarea.init();

      // And we're done here
      Candy.Core.attach(
        '#{@credentials[:jid]}',
        '#{@credentials[:sid]}',
        #{@credentials[:rid]}
      );

      // How many unread messages do we have in total? There will be a way of
      // querying Candy directly but this works for now.
      function getUnreadMessageCount() {
        total = 0;
        $('#chat-tabs small.unread').each(function(n) {
          $element = $(this);
          if ($element.is(':visible')) {
            total += parseInt($element.text());
          }
        })
        return total;
      }

      // Update the top window title with the new message count.
      function updateUnreadMessageCount(count) {
        if (window.parent) {
          if (typeof count == 'undefined') {
            count = getUnreadMessageCount();
          }
          window.parent.updateUnreadMessageCount(count);
        }
      }

      window.updateUnreadMessageCount = updateUnreadMessageCount

      // Update when we focus or blur the window.
      $(window).focus(function() {
        updateUnreadMessageCount()
      }).blur(function() {
        updateUnreadMessageCount()
      });

      // Update when a new message is rendered.
      $(Candy).on('candy:view.message.after-show', function(event, data) {
        updateUnreadMessageCount();
      });

      // Update just after a tab is opened.
      $('#chat-tabs').click(function(event) {
        setTimeout(updateUnreadMessageCount, 50);
      });

      // Send the user to the login page if we've been logged out
      $(Candy).on('candy:core.login', function(event, data) {
        updateUnreadMessageCount(-1);
        top.location.replace('#{root_url}')
      });

      // Now bookmark the default rooms
      //
      // Just a stand-in until I figure out how to get xmpp4r to do it.
      #{candy_bookmark_rooms}
    });
